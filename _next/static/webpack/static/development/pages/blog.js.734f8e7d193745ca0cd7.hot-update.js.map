{"version":3,"file":"static/webpack/static/development/pages/blog.js.734f8e7d193745ca0cd7.hot-update.js","sources":["webpack:///./posts/03-sane-cicd-setup-python.md"],"sourcesContent":["export default \"---\\nid: 3\\ntitle: \\\"A sane CI/CD setup for Python\\\"\\nthumbnail: /static/img/shattered-island.gif\\ndate: June 11, 2019\\nlength: 5 min read\\ncategory: devops\\ndescription: \\\"This is article is a quick guide on what practices you should follow to have a sane CI/CD workflow in your Python project, this is especially important when working with a team of professional software engineers so you can spend your time on developing new features instead of stressing about merges and deployments.\\\"\\n---\\nThis is article is a quick guide on what practices you should follow to have a sane CI/CD workflow in your Python project, this is especially important when working with a team of professional software engineers so you can spend your time on developing new features instead of stressing about merge conflicts and broken deployments.\\n\\n## Continuous Integration\\nContinuous Integration is the practice of integrating the work of multiple developers into a shared repository as frequently as possible. The goal is to detect and fix errors fast instead of waiting for things to pile up.\\n\\n\\n\\n\""],"mappings":";;;;;;;;;;AAAA;AAAA;;;;A","sourceRoot":""}